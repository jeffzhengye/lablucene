package zheng.python.scilearn;

import java.io.IOException;

import com.bitmechanic.barrister.HttpTransport;

/**
 * DO NOT EDIT THIS FILE!
 * 
 * Generated by Barrister Idl2Java: https://github.com/coopernurse/barrister-java
 * 
 * Generated at: Tue Dec 11 15:42:50 EST 2012
 */
public class PredictorClient implements Predictor {

    private com.bitmechanic.barrister.Transport _trans;

    public PredictorClient(com.bitmechanic.barrister.Transport trans) {
        trans.getContract().setPackage("zheng.python.scilearn");
        this._trans = trans;
    }

    public Double predict(String inst_str) throws com.bitmechanic.barrister.RpcException {
        Object _params = new Object[] { inst_str };
        com.bitmechanic.barrister.RpcRequest _req = new com.bitmechanic.barrister.RpcRequest(java.util.UUID.randomUUID().toString(), "Predictor.predict", _params);
        com.bitmechanic.barrister.RpcResponse _resp = this._trans.request(_req);
        if (_resp == null) {
            return null;
        }
        else if (_resp.getError() == null) {
            return (Double)_resp.getResult();
        }
        else {
            throw _resp.getError();
        }
    }
    
    public static void main(String args[]){
    	 HttpTransport trans = null;
    	 PredictorClient predictor = null;
    	{
    		try {
//    			trans = new HttpTransport("http://127.0.0.1:60000/predictor");
    			trans = new HttpTransport("http://10.7.10.219:8080/predictor");
    			predictor = new PredictorClient(trans);
    			System.out.println(predictor.predict("1. 2. 3. 4. 5. 6."));
    		} catch (Exception e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
    		}
    		
    	}
    	
    	
    }
}

